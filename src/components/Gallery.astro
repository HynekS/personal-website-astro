---
import { getImage } from "astro:assets";

interface Props {
  gallery: {
    [key: string]: { src: string; height: number; width: number };
  };
}

const { gallery } = Astro.props;

const sources = await Promise.all(
  Object.values(gallery).map(
    async (img) =>
      await getImage({ src: { ...img, format: "webp" }, inferSize: true })
  )
);
---

{
  sources.length === 0 ? null : sources.length === 1 ? (
    <imge
      src={sources[0]?.src}
      {...sources[0]?.attributes}
      alt=""
      data-lightbox
    />
  ) : (
    <section class="grid gap-2 md:grid-cols-2 lg:grid-cols-3">
      {sources.map((source) => (
        <figure class="flex justify-center mb-0 rounded cursor-pointer bg-secondary">
          <img
            src={source.src}
            {...source.attributes}
            alt=""
            data-lightbox
            class="object-contain"
          />
        </figure>
      ))}
    </section>
  )
}
