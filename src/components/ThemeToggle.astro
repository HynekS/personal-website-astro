---
const props = Astro.props;
---

<button
  data-role="theme-toggle"
  aria-label="Toggle Dark Mode"
  class={`rounded-full border-2 w-9 h-9 relative overflow-hidden focus:outline-none focus:ring-0 dark:border-gray-600 ${
    props.class ? props.class : ""
  }`}
>
  <svg
    class="w-6 h-6 absolute inset-0 mx-auto my-auto invisible dark:visible stroke-gray-400"
    fill="none"
    stroke="var(--color-primary)"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width={2}
      d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
    ></path>
  </svg>
  <svg
    class="w-6 h-6 absolute inset-0 mx-auto my-auto dark:invisible stroke-gray-600"
    fill="none"
    stroke="#dddddd"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width={2}
      d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
    ></path>
  </svg>
</button>

<script>
  const toggleTheme = (evt) => {
    if (
      evt.target.closest("button")?.getAttribute("data-role") !== "theme-toggle"
    )
      return false;

    const currentTheme = localStorage.getItem("theme") ?? "light";
    console.log("clicked");
    if (currentTheme === "light") {
      localStorage.setItem("theme", "dark");
      document.documentElement.classList.add("dark");
      return;
    }
    if (currentTheme === "dark") {
      localStorage.setItem("theme", "light");
      document.documentElement.classList.remove("dark");
      return;
    }
  };
  if (globalThis.document) {
    document.body.addEventListener("click", toggleTheme);
  }
</script>
